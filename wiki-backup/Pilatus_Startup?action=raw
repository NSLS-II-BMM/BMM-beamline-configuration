<font face="Cambria, serif"><font style="font-size: 28pt" size="6">Pilatus100k startup</font></font>

This information provided by Oksana Ivashkevych<br/>EPICS support for Pilatus100k is residing on Pilatus server xf06BM-pilatus100k in user “det” home folder. Pilatus server runs SUSE Linux with the version not supported now, however, it has all packages and configuration, and runs well. Scientific data are written to NFS mounted folder <tt>/mnt/nfs/nas1</tt> via File saving plugin of areaDetector software.



== Power and enabled N2 on detector head before starting the software. ==

== Start camserver. ==

“camserver” is vendor provided software, which communicates with detector hardware. It has logs, reports any hardware issues. This information can be useful during troubleshooting. If interested, one can check what script does with more command.

'''''./start_camserver'''''

will start a camserver in procServ shell, which runs on the background and allows several people connect to it, check the message stream. All shell messages are also being logged. You can exit the procServ shell by “Ctr ]” followed by “q”.

=== Optional: verify the hardware is working ===

<br/>If you are troubleshooting and would like to see the detector is taking images properly,<br/><code>'''''cd p2_det'''''<br/>'''''./tvxonly'''''</code><br/>This will start tvx client and present two test images. You <u>'''must'''</u>exit tvx before starting EPICS client, as only one client can be connected to camserver at a time. Type ‘exit’ in tvx shell.

== Start EPICS client ==

<code>./start_epics</code>

You can exit the procServ shell same way by “Ctr ]” followed by “q”.

== Terminating camserv and EPICS cleient. ==

In order to terminate the server and the client one needs to list them as processes using

<code>ps -ef | grep procServ</code>

for example, and use kill command with process ID. This should be done '''ONLY''' if one understands what he/she/they is doing.



----
<br/>
== Files: ==

*[[Media:DP_Pilatus_UserGuide_v2.2.3.pdf|Pilatus User Guide (PDF)]]
*[[Media:Technical_Specification_PILATUS_100K-S_V1_8.pdf|Pilatus 100K Technical Specifications (PDF)]]
*[[Media:User_Manual-PILATUS2-V1_4.pdf|Pilatus User Manual (PDF)]]

&nbsp;



----

Here are some hints about how to incorporate Pilatus images into BlueSky plans:
<pre>BMM XRD.111 [45] ▶ PilatusGrabber?
Docstring:     
Crude tool for grabbing images from the Pilatus.  Largely following
the standard BlueSky AreaDetector interface, but monkey patching
functionality for the bits that I am too dim to figure out.

Define the Pilatus Detector
   pilatus = MyDetector('XF:06BMB-ES{Det:PIL100k}:', name='Pilatus')

Make an PilatusGrabber opbject
   pil = PilatusGrabber(pilatus)

Take an exposure
   pil.snap()

Show the image (and maybe copy it elsewhere)
   pil.fetch()

Properties:
   path:      AreaDetector's file path (cannot have spaces)
   fname:     file name
   template:  substitution template for constructing the resolved file name
   fullname:  AreaDetector's fully resolved file name
   number:    file extension (auto increments)
   threshold: detector energy threshold in keV
   time:      exposure time, sets the exposure time and acquire time
   ready:     flag with a simple check to see if camera is ready to take a picture

</pre>